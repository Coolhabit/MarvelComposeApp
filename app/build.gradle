plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

apply from: '../dependencies.gradle'

android {
    compileSdk compSdkVersion
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "ru.coolhabit.marvelcomposeapp"
        minSdk mSdkVersion
        targetSdk tarSdkVersion
        vectorDrawables.useSupportLibrary = true
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    testImplementation junit
    androidTestImplementation android_test
    androidTestImplementation test_espresso
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    implementation core_ktx
    implementation lifecycle_runtime_ktx
    implementation activity_compose

    // coroutines
    implementation kotlinx_coroutines_core
    implementation kotlinx_coroutines_android

    // dagger 2
    implementation dagger
    implementation dagger_android
    implementation dagger_android_support
    kapt dagger_android_processor
    kapt dagger_compiler

    // navigation
    implementation navigation_compose
}
